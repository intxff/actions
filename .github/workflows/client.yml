name: Client
run-name: ${{ inputs.user }}'s clients -- ${{ inputs.platform }}
on: 
  workflow_dispatch:
    inputs:
      user:
        required: true
        type: string
      version:
        required: true
        type: string
      lib_version:
        required: true
        type: choice
        options:
          - 1.9.0
      debug:
        required: false
        type: boolean
        default: false
      lib_run_id:
        required: true
        type: string
      branch:
        required: false
        type: string
        default: main
      platform:
        required: true
        type: choice
        options:
          - windows
          - macos
          - linux
          - android
          - all

defaults:
  run:
    working-directory: ./siren

env:
  FLUTTER_VERSION: 3.22.x

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        pkg: [exe]
    if: ${{ inputs.platform == 'windows' || inputs.platform == 'all' }}
    runs-on: windows-latest
    steps:
      - name: Clone siren
        uses: actions/checkout@v4
        with:
          path: siren
          repository: intxff/siren
          token: ${{ secrets.ACTION_TOKEN }}
          ref: ${{ inputs.branch }}
      - name: Clone siren-users
        uses: actions/checkout@v4
        with:
          path: siren-users
          repository: intxff/siren-users
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false 
      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: "siren-users/go.mod"
      - name: download libsingbox
        uses: dawidd6/action-download-artifact@v5
        with:
          workflow: libs.yml
          run_id: ${{ inputs.lib_run_id }}
          name: ${{ format('libsingbox_windows_amd64_{0}', inputs.lib_version) }}
          github_token: ${{ secrets.ACTION_TOKEN }}
      - name: debug 
        if: ${{ inputs.debug }}
        uses: mxschmitt/action-tmate@v3
      - name: compile client
        run: |
          make ci_windows LIB_VERSION=${{ inputs.lib_version }} VERSION=${{ inputs.version }} PKG=${{ matrix.pkg }} USER=${{ inputs.user }}
      - name: debug 
        if: ${{ inputs.debug }}
        uses: mxschmitt/action-tmate@v3
      - name: pack exe
        if: ${{ matrix.pkg == 'exe' }}
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.4
        with:
          path: ./siren/build/windows/x64/runner/Release/siren.iss
          options: /O"./siren"
      - name: upload exe
        if: ${{ matrix.pkg == 'exe' }}
        uses: actions/upload-artifact@v4
        with:
          name: siren_windows_amd64_${{ inputs.version }}_${{ matrix.pkg }}_${{ inputs.user }}
          path: ./siren/siren_setup.exe
          overwrite: true
      - name: upload debug symbol
        uses: actions/upload-artifact@v4
        with:
          name: siren_windows_amd64_${{ inputs.version }}_${{ matrix.pkg }}_${{ inputs.user }}_symbol
          path: ./siren/siren_windows_amd64_${{ inputs.version }}_${{ matrix.pkg }}_${{ inputs.user }}_symbol
          overwrite: true

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        pkg: [zip]
    if: ${{ inputs.platform == 'linux' || inputs.platform == 'all' }}
    runs-on: ubuntu-latest
    steps:
      - name: Clone siren
        uses: actions/checkout@v4
        with:
          path: siren
          repository: intxff/siren
          token: ${{ secrets.ACTION_TOKEN }}
          ref: ${{ inputs.branch }}
      - name: Clone siren-users
        uses: actions/checkout@v4
        with:
          path: siren-users
          repository: intxff/siren-users
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false 
      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: "siren-users/go.mod"
      - name: download libsingbox
        uses: dawidd6/action-download-artifact@v5
        with:
          workflow: libs.yml
          run_id: ${{ inputs.lib_run_id }}
          name: ${{ format('libsingbox_linux_amd64_{0}', inputs.lib_version) }}
          github_token: ${{ secrets.ACTION_TOKEN }}
      - name: debug 
        if: ${{ inputs.debug }}
        uses: mxschmitt/action-tmate@v3
      - name: compile client
        run: |
          make ci_linux LIB_VERSION=${{ inputs.lib_version }} VERSION=${{ inputs.version }} PKG=${{ matrix.pkg }} USER=${{ inputs.user }}
      - name: upload zip package
        if: ${{ matrix.pkg == 'zip' }}
        uses: actions/upload-artifact@v4
        with:
          name: siren_linux_amd64_${{ inputs.version }}_${{ matrix.pkg }}_${{ inputs.user }}
          path: ./siren/build/linux/x64/release/bundle
          overwrite: true
      - name: upload debug symbol
        uses: actions/upload-artifact@v4
        with:
          name: siren_linux_amd64_${{ inputs.version }}_${{ matrix.pkg }}_${{ inputs.user }}_symbol
          path: ./siren/siren_linux_amd64_${{ inputs.version }}_${{ matrix.pkg }}_${{ inputs.user }}_symbol
          overwrite: true

  build-android:
    if: ${{ inputs.platform == 'android' || inputs.platform == 'all' }}
    runs-on: ubuntu-latest
    steps:
      - name: Clone siren
        uses: actions/checkout@v4
        with:
          path: siren
          repository: intxff/siren
          token: ${{ secrets.ACTION_TOKEN }}
          ref: ${{ inputs.branch }}
      - name: Clone siren-users
        uses: actions/checkout@v4
        with:
          path: siren-users
          repository: intxff/siren-users
          token: ${{ secrets.ACTION_TOKEN }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false 
      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: "siren-users/go.mod"
      - name: download libsingbox
        uses: dawidd6/action-download-artifact@v5
        with:
          workflow: libs.yml
          run_id: ${{ inputs.lib_run_id }}
          name: ${{ format('libsingbox_android_aar_{0}', inputs.lib_version) }}
          github_token: ${{ secrets.ACTION_TOKEN }}
      - name: compile client
        run: |
          make ci_android LIB_VERSION=${{ inputs.lib_version }} VERSION=${{ inputs.version }} PKG=apk USER=${{ inputs.user }}
      - name: debug 
        if: ${{ inputs.debug }}
        uses: mxschmitt/action-tmate@v3
      - name: upload apk
        uses: actions/upload-artifact@v4
        with:
          name: siren_android_${{ inputs.version }}_apk_${{ inputs.user }}
          path: ./siren/build/app/outputs/flutter-apk/app-release.apk
          overwrite: true
      - name: upload debug symbol
        uses: actions/upload-artifact@v4
        with:
          name: siren_android_${{ inputs.version }}_apk_${{ inputs.user }}_symbol
          path: ./siren/siren_android_${{ inputs.version }}_apk_${{ inputs.user }}_symbol
          overwrite: true

  build-macos:
    if: ${{ inputs.platform == 'macos' || inputs.platform == 'all' }}
    runs-on: macos-latest
    steps:
      - name: Clone siren
        uses: actions/checkout@v4
        with:
          path: siren
          repository: intxff/siren
          token: ${{ secrets.ACTION_TOKEN }}
          ref: ${{ inputs.branch }}
      - name: Clone siren-users
        uses: actions/checkout@v4
        with:
          path: siren-users
          repository: intxff/siren-users
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false 
      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: "siren-users/go.mod"
      - name: download libsingbox amd64
        uses: dawidd6/action-download-artifact@v5
        with:
          workflow: libs.yml
          run_id: ${{ inputs.lib_run_id }}
          name: ${{ format('libsingbox_macos_amd64_{0}', inputs.lib_version) }}
          github_token: ${{ secrets.ACTION_TOKEN }}
      - name: download libsingbox arm64
        uses: dawidd6/action-download-artifact@v5
        with:
          workflow: libs.yml
          run_id: ${{ inputs.lib_run_id }}
          name: ${{ format('libsingbox_macos_arm64_{0}', inputs.lib_version) }}
          github_token: ${{ secrets.ACTION_TOKEN }}
      - name: compile client
        run: |
          make ci_macos LIB_VERSION=${{ inputs.lib_version }} VERSION=${{ inputs.version }} PKG=dmg USER=${{ inputs.user }}
      - name: debug 
        if: ${{ inputs.debug }}
        uses: mxschmitt/action-tmate@v3
      - name: upload dmg
        uses: actions/upload-artifact@v4
        with:
          name: siren_macos_${{ inputs.version }}_app_${{ inputs.user }}
          path: ./siren/${{ inputs.user }}.dmg
          overwrite: true
      - name: upload debug symbol
        uses: actions/upload-artifact@v4
        with:
          name: siren_macos_${{ inputs.version }}_dmg_${{ inputs.user }}_symbol
          path: ./siren/siren_macos_${{ inputs.version }}_dmg_${{ inputs.user }}_symbol
          overwrite: true
