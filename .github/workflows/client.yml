name: Client
on: 
  workflow_dispatch:
    inputs:
      user:
        required: true
        type: string
      version:
        required: true
        type: string
      lib_version:
        required: true
        type: choice
        options:
          - 1.9.0
      debug:
        required: false
        type: boolean
        default: false
      lib_run_id:
        required: true
        type: string
      platform:
        required: true
        type: choice
        options:
          - windows
          - macos
          - linux
          - android
          - all

defaults:
  run:
    working-directory: ./siren

env:
  FLUTTER_VERSION: 3.22.x

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        pkg: [zip, msix]
    if: ${{ inputs.platform == 'windows' || inputs.platform == 'all' }}
    runs-on: windows-latest
    steps:
      - name: Clone siren
        uses: actions/checkout@v4
        with:
          path: siren
          repository: intxff/siren
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Clone siren-users
        uses: actions/checkout@v4
        with:
          path: siren-users
          repository: intxff/siren-users
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false 
      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: "siren-users/go.mod"
      - name: download libsingbox
        uses: dawidd6/action-download-artifact@v5
        with:
          workflow: libs.yml
          run_id: ${{ inputs.lib_run_id }}
          name: ${{ format('libsingbox_windows_amd64_{0}', inputs.lib_version) }}
          github_token: ${{ secrets.ACTION_TOKEN }}
      - name: compile client
        run: |
          make ci_windows LIB_VERSION=${{ inputs.lib_version }} VERSION=${{ inputs.version }} PKG=${{ matrix.pkg }}
      - name: debug 
        if: ${{ inputs.debug }}
        uses: mxschmitt/action-tmate@v3
      - name: pack msix
        if: ${{ matrix.pkg == 'msix' }}
        run: |
          dart run msix:build
          dart run msix:pack
      - name: upload msix package
        if: ${{ matrix.pkg == 'msix' }}
        uses: actions/upload-artifact@v4
        with:
          name: Siren_windows_amd64_${{ inputs.version }}_${{ inputs.user }}.msix
          path: ./siren/Siren.msix
          overwrite: true
      - name: upload zip package
        if: ${{ matrix.pkg == 'zip' }}
        uses: actions/upload-artifact@v4
        with:
          name: Siren_windows_amd64_${{ inputs.version }}_${{ inputs.user }}.zip
          path: ./siren/build/windows/x64/runner/Release
          overwrite: true
      - name: upload debug symbol
        uses: actions/upload-artifact@v4
        with:
          name: Siren_windows_amd64_${{ inputs.version }}_${{ inputs.user }}_${{ matrix.pkg }}
          path: ./siren/Siren_${{ inputs.user }}_windows_${{ inputs.version }}_${{ matrix.pkg }}
          overwrite: true

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        pkg: [zip, deb]
    if: ${{ inputs.platform == 'linux' || inputs.platform == 'all' }}
    runs-on: ubuntu-latest
    steps:
      - name: Clone siren
        uses: actions/checkout@v4
        with:
          path: siren
          repository: intxff/siren
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Clone siren-users
        uses: actions/checkout@v4
        with:
          path: siren-users
          repository: intxff/siren-users
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false 
      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: "siren-users/go.mod"
      - name: download libsingbox
        uses: dawidd6/action-download-artifact@v5
        with:
          workflow: libs.yml
          run_id: ${{ inputs.lib_run_id }}
          name: ${{ format('libsingbox_linux_amd64_{0}', inputs.lib_version) }}
          github_token: ${{ secrets.ACTION_TOKEN }}
      - name: compile client
        run: |
          make ci_linux LIB_VERSION=${{ inputs.lib_version }} VERSION=${{ inputs.version }} PKG=${{ matrix.pkg }}
      - name: debug 
        if: ${{ inputs.debug }}
        uses: mxschmitt/action-tmate@v3
      - name: pack deb 
        if: ${{ matrix.pkg == 'deb' }}
        run: |
          make ci_deb VERSION=${{ inputs.version }}
      - name: upload deb package
        if: ${{ matrix.pkg == 'deb' }}
        uses: actions/upload-artifact@v4
        with:
          name: Siren_linux_amd64_${{ inputs.version }}_${{ inputs.user }}.deb
          path: ./siren/Siren.deb
          overwrite: true
      - name: upload zip package
        if: ${{ matrix.pkg == 'zip' }}
        uses: actions/upload-artifact@v4
        with:
          name: Siren_linux_amd64_${{ inputs.version }}_${{ inputs.user }}.zip
          path: ./siren/build/linux/x64/release/bundle
          overwrite: true
      - name: upload debug symbol
        uses: actions/upload-artifact@v4
        with:
          name: Siren_linux_amd64_${{ inputs.version }}_${{ inputs.user }}_${{ matrix.pkg }}
          path: ./siren/Siren_${{ inputs.user }}_linux_${{ inputs.version }}_${{ matrix.pkg }}
          overwrite: true
